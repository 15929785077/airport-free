name: clash节点

on:
  schedule:
    - cron: "0 */3 * * *" 
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: 安装 Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: 依赖
      run: |
        # 各种模块
        pip install --upgrade pip
        pip install requests
        pip install datetime


    - name: 删除旧生成的文件
      run: |
        rm -f clash/*.txt || ture


    - name: 遍历运行py脚本并输出文本
      run: |
        for file in nodes/clash/*.py;do
        py_name=$(basename $file .txt)
        python "$file" > "clash/${py_name}.txt"
        done


    - name: copy README.md
      run: |
        cp nodes/README.md README.md
        

    - name: README.md内容输出（以防clash和v2ray二缺一，都给运行了，无论早晚都是最新的）
      run: |
        python v2ray/v2ray.py > v2raymd.txt
        # echo "::set-output name=resultv2ray::$(cat v2raymd.txt)"
        resultv2ray=$(cat v2raymd.txt)
        sed -i 's|<v2ray_list>|'"${resultv2ray}"'|g' README.md
        python clash/clash.py > clashmd.txt
        # echo "::set-output name=resultclash::$(cat clashmd.txt)"
        resultclash=$(cat clashmd.txt)
        sed -i 's|<clash_list>|'"${resultclash}"'|g' README.md
        rm -f v2raymd.txt || ture
        rm -f clashmd.txt || ture


    - name: Commit and push if there are changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        if [[ `git status --porcelain` ]]; then
          git commit -m "clash节点列表" && git push
        else
          echo "No changes to commit."
        fi
